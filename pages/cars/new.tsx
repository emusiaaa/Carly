import Head from 'next/head'
import PageLayout from '../../components/PageLayout'
import FormGrid from "../../components/FormGrid";
import {useState} from "react";
import {carData} from "../../models/carData";
import {Grid, Hidden} from "@mui/material";
import DirectionsCarOutlinedIcon from '@mui/icons-material/DirectionsCarOutlined';
import {useRouter} from "next/router";
import {ImageUploader as PhotosInput} from "../../components/ImageUploader";
import {useJwtToken} from "../../functions/useJwtToken";

export default function NewCar() {
  const router = useRouter();
    const [carData,setCarData] = useState<carData>({
        brandId: '',
        name: '',
        productionYear: '',
        carTypeId: '',
        fuelTypeId: '',
        isGearboxAutomatic: '',
        numberOfDoors: '',
        numberOfSeats: '',
        trunkCapacity: '',
        horsePower: '',
        avgFuelConsumption: '',
        mileage: '',
        equipment: [],
        dayPrice: '',
        color: ''
    })
    const [images, setImages] = useState<number[]>([]);
    const [loading, setLoading] = useState(false);

    const token = useJwtToken();

    const Save = (brandId: number, modelName: string,productionYear: number,carTypeId: number, fuelTypeId: number,
                  isGearboxAutomatic: boolean, numberOfDoors: number, numberOfSeats: number,
                  trunkCapacity: number, horsePower: number, avgFuelConsumption:number,
                  mileage: number, equipment: number[], dayPrice: number, color: string) =>
    {
        setLoading(true)
        let json1 = {
            brandId: brandId,
            name: modelName,
            variant: null,
            productionYear: productionYear,
            carTypeId: carTypeId,
            fuelTypeId: fuelTypeId,
            isGearboxAutomatic: isGearboxAutomatic,
            numberOfDoors: numberOfDoors,
            numberOfSeats: numberOfSeats,
            trunkCapacity: trunkCapacity,
            horsePower: horsePower,
            avgFuelConsumption: avgFuelConsumption
        }

        let json2 = {
            modelId: 0,
            mileage: mileage,
            equipment: equipment,
            dayPrice: dayPrice,
            color: color,
            photos: images
        }
        //console.log(json1)
        fetch(`https://carlybackend.azurewebsites.net/internal/models/`, {
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                //'Authorization': `Bearer ${token}`
            },
            method: "POST",
            body: JSON.stringify(json1)
        })
            .then((response) => {
                if (response.status === 401)
                    throw 'Random error' // workaround
                return response.json()
            })
            .then((result) => {
                if(typeof result.id == "number"){
                    json2.modelId= result.id;
                    fetch(`https://carlybackend.azurewebsites.net/cars`, {
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        method: "POST",
                        body: JSON.stringify(json2)
                    })
                        .then(response => response.json())
                        .then(result =>
                        {
                            setLoading(false)
                            let url = /cars/ + result.id
                            if (!(router.route === url))
                                router.push(url);
                        })
                }
            })
            .catch(function(res){ console.log(res) })

    }

  return (
    <>
      <Head>
        <title>Carly</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/ColoredLogo.svg" />
      </Head>
      <main>
        <PageLayout>
            <Grid container alignItems="center" justifyContent="center" rowSpacing={3}
                  sx={{padding:' 10px'}}>
                <Grid item xs={11} md={8}>
                    <FormGrid type={0} carData={carData} Save={Save} isLoading={loading}/>
                </Grid>
                <Hidden mdDown={true}>
                    <Grid item md={3}>
                        <DirectionsCarOutlinedIcon color="primary" style={{width:'92%',height:'100%'}}/>
                    </Grid>
                </Hidden>
                <Grid item xs={11}>
                    <PhotosInput images={images} setImages={setImages}/>
                </Grid>
            </Grid>
        </PageLayout>
      </main>
    </>
  )
}
